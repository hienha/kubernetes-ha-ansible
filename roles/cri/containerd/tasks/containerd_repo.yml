---
- block:
    - name: 添加 containerd 安装源 key
      apt_key:
        url: "{{ docker_repo_base_url }}/{{ ansible_distribution|lower }}/gpg"
        state: present

    - name: 添加 containerd apt 安装源
      apt_repository:
        repo: >-
          deb {{ docker_repo_base_url }}/{{ ansible_distribution|lower }}
          {{ ansible_distribution_release|lower }}
          stable
        state: present
        filename: docker-ce

    - name: 添加 cri-tools 安装源 key
      apt_key:
        url: "{{ kube_repo_base_url }}/apt/doc/apt-key.gpg"
        state: present

    - name: 添加 cri-tools apt 安装源
      apt_repository:
        repo: >-
          deb {{ kube_repo_base_url }}/apt/ kubernetes-xenial main
        state: present
        filename: kubernetes

    - name: 安装 containerd (apt)
      package:
        name: containerd
        state: present
      notify: restart containerd

    - name: 安装 cri-tools (apt)
      package:
        name: cri-tools
        state: present
  when: ansible_os_family == "Debian"

- block:
    - name: 添加 containerd yum 源
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        file: docker-ce
        baseurl: "{{ docker_repo_base_url }}/{{ ansible_distribution|lower }}/7/$basearch/stable"
        gpgkey: "{{ docker_repo_base_url }}/{{ ansible_distribution|lower }}/gpg"
        enabled: yes
        gpgcheck: yes

    - name: 安装 containerd (yum)
      yum:
        name: containerd
        state: present
      notify: restart containerd

    - name: 添加 cri-tools yum 源
      yum_repository:
        name: kubernetes
        description: kubernetes
        file: kubernetes
        baseurl: "{{ kube_repo_base_url }}/yum/repos/kubernetes-el7-x86_64"
        gpgkey: "{{ kube_repo_base_url }}/yum/doc/yum-key.gpg {{ kube_repo_base_url }}/yum/doc/rpm-package-key.gpg"
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes

    - name: 安装 cri-tools (yum)
      yum:
        name: cri-tools
        state: present
      notify: restart containerd
  when: ansible_os_family == "RedHat"
