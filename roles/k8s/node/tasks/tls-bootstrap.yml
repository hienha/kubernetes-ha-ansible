---
- block:
    - name: 拷贝tls-bootstrap-binding.yml到第一台master
      copy:
        src: tls-bootstrap-binding.yml
        dest: "{{ kube_dir }}/tls-bootstrap-binding.yml"

    - name: 允许system:bootstrappers用户组创建并且自动批准CSR、允许system:nodes用户组自动更新CSR
      shell: |
        {{ kube_bin_dir }}/kubectl apply -f {{ kube_dir }}/tls-bootstrap-binding.yml

    - name: 生成token-id
      shell: |
        openssl rand -hex 3
      register: token_id

    - name: 生成token-secret
      shell: |
        openssl rand -hex 8
      register: token_secret

    - name: 设置token有效期
      shell: |
        date -u -d '1 day' +'%FT%TZ'
      register: expiration

    - name: 配置token
      shell: >-
        {{ kube_bin_dir }}/kubectl -n kube-system create secret generic bootstrap-token-{{ token_id.stdout }}
        --type "bootstrap.kubernetes.io/token"
        --from-literal description="tls bootstrap token"
        --from-literal token-id={{ token_id.stdout }}
        --from-literal token-secret={{ token_secret.stdout }}
        --from-literal expiration={{ expiration.stdout }}
        --from-literal usage-bootstrap-authentication=true
        --from-literal usage-bootstrap-signing=true
  delegate_to: "{{ groups['kube-master']|first }}"
  run_once: true

- block:
    - name: 获取ca.crt base64编码
      slurp:
        src: "{{ localhost_dir }}/pki/ca.crt"
      register: ca_cert_base64

    - name: 获取ca.crt base64编码2
      slurp:
        src: "{{ localhost_dir }}/pki/ca.crt"
      register: ca_cert_base64

    - name: 生成bootstrap-kubelet.conf
      template:
        src: bootstrap-kubelet.conf.j2
        dest: "{{ localhost_dir }}/pki/bootstrap-kubelet.conf"
  delegate_to: localhost
  run_once: true
